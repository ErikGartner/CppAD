/* --------------------------------------------------------------------------
CppAD: C++ Algorithmic Differentiation: Copyright (C) 2003-21 Bradley M. Bell

  CppAD is distributed under the terms of the
               Eclipse Public License Version 2.0.

  This Source Code may also be made available under the following
  Secondary License when the conditions for such availability set forth
  in the Eclipse Public License, Version 2.0 are satisfied:
        GNU General Public License, Version 2.0 or later.
-------------------------------------------------------------------------- */

$begin whats_new_21$$
$spell
    CppAD
    cppad
    cxx
    cmake
    json_lexer
    std::isdigit
    Microsoft
    const
    ifndef
    iterator
    azmul
    nans
    optimizer
    eigen
    cppadcg
    ipopt
$$

$section Changes and Additions to CppAD During 2021$$

$head 03-07$$
Make $cref UnaryMinus$$ an atomic operation,
instead of using binary subtraction of zero minus the value being negated.

$head 02-21$$
Add specifications for what is conditionally installed by the
$cref/include_eigen/cmake/include_eigen/$$ and
$cref/include_ipopt/cmake/include_ipopt/$$ options.
In addition, make it clearer that
$cref/include_cppadcg/cmake/include_cppadcg/$$ should only be used for testing.

$head 02-16$$
There was a problem with atomic functions, $cref optimize$$, and reverse mode
that would lead to unexpected nans.
This has been fixed by changing values,
that the optimizer determines are not used, from nan to zero.
A discussion of this was added below
$cref/azmul/atomic_three_reverse/partial_x/azmul/$$
in the atomic reverse documentation.

$head 02-14$$
$list number$$
Add the $cref/print/cpp_graph_print/$$ command to the
$code cpp_graph$$ class.
$lnext
Change the name of a documentation section form $code seq_property$$
to $cref fun_property$$.
$lnext
Add setting and getting a $code ADFun$$ function's
$cref/name/function_name/$$.
$lend

$head 02-12$$
$list number$$
In the case where
$cref/cppad_debug_which/cmake/cppad_debug_which/$$ is
$code debug_all$$ ($code debug_none$$) the corresponding
$icode CMAKE_BUILD_TYPE$$ is now specified as
$code Debug$$ ($code Release$$).
$lnext
Fix the $code Policy CMP0054$$ warning during the
$cref/cmake command/cmake/CMake Command/$$.
$lnext
Fix the $cref/Visual Studio/cmake/CMake Command/Visual Studio/$$ build.
This included commenting out part of the CppAD vector test
because the MSC compiler is confused between the vector's const_iterator and
iterator; see $code # ifndef _MSC_VER$$ in $cref cppad_vector.cpp$$.
$lend

$head 02-11$$
Fix some problems with the linking of the $code cppad_lib$$ library
when using the Microsoft compiler.

$head 02-08$$
Fix some problems in the
$cref/cppad.pc/pkgconfig/cppad.pc/$$ file; see pull request
$href%https://github.com/coin-or/CppAD/pull/95/files%95%$$.

$head 02-06$$
A special version of the $cref/pow(x, y)/pow/$$ function was added
for the special case where $icode y$$ is a parameter.
This properly handles the special case where $icode x$$ is zero
and $icode y$$ is greater than the order of the derivative.
In addition, it only requires one tape variable (instead of three)
for each $code pow$$ operation.

$head 01-27$$
There was a bug in the converting to abs_normal form when
the function $cref/f/abs_normal_fun/f/$$ made use of the
$cref pow$$ operator.
To be specific, when compiling without $code NDEBUG$$ defined,
an assert was generated even though the code was correct.
This has been fixed.

$head 01-26$$
Change the prototype for the cmake command
$cref/options/cmake/CMake Command/Options/$$ to use $icode true_or_false$$,
instead of $code true$$ to highlight the fact that one can choose either
true or false.

$head 01-08$$
On some systems, the file $code cppad_lib/json_lexer.cpp$$ would not compile
because the $code std::isdigit$$ function was not defined.
This has been fixed.

$head 01-07$$
The example $cref pow_nan.cpp$$ was added.

$head 01-05$$
$list number$$
Improve discussion of $cref/cppad_cxx/cmake/cppad_cxx_flags/$$
and make sure all uses are exactly as described.
In addition, change mention of optional features from C++11 to C++17.
$lnext
The required version of $cref cmake$$ was advanced from 2.8.4 to 3.0.
This fixes a policy CMP0042 warning on Mac systems.
$lnext
If the compiler, plus the flags in
$cref/cppad_cxx_flags/cmake/cppad_cxx_flags/$$,
does not by default support C++11, cmake is used
to find and add the flags necessary for this support.
$lend

$head 01-03$$
$list number$$
Fix a bug in $cref reverse$$ mode for an
$codei%ADFun< AD<%Base%> >%$$ function that has
$cref/dynamic/Independent/dynamic/$$ parameters and
value of one of these parameters was zero or one when the function
was recorded.
$lnext
Fix a bug in the $cref autotools$$ building of $code cppad_lib$$.
$lend

$end
